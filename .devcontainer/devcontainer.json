{
    "name": "Ubuntu",
    "build": {
        "dockerfile": "Dockerfile"
    },
    // This creates the (empty) .env file for instance -
    // scripts present for each Windows/Linux
    "initializeCommand": [
        ".devcontainer/overlay/initializeCommand"
    ],
    "runArgs": [
        // Secret injection as environment variables
        // https://code.visualstudio.com/remote/advancedcontainers/environment-variables#_option-2-use-an-env-file
        "--env-file=.devcontainer/.env",
        "--add-host=host.docker.internal:host-gateway"
    ],
    // Features to add into the container following the new proposed specification
    // https://github.com/devcontainers/features
    "features": {
        "ghcr.io/devcontainers/features/common-utils:1": {
            "username": "automatic",
            "uid": "automatic",
            "gid": "automatic",
            "installZsh": true,
            "installOhMyZsh": true,
            "upgradePackages": true,
            "nonFreePackages": false
        },
        "ghcr.io/devcontainers/features/docker-from-docker:1": {
            "version": "5:20.10*",
            "moby": false
        },
        "ghcr.io/devcontainers/features/git:1": {
            "version": "os-provided",
            "ppa": false
        },
        "ghcr.io/devcontainers/features/go:1": {
            "version": "1.20"
        },
        "ghcr.io/devcontainers/features/node:1": {
            "version": "lts",
            "nodeGypDependencies": true
        },
        "ghcr.io/devcontainers-contrib/features/sbt-sdkman:2": {
            "jdkVersion": "8",
            "jdkDistro": "ms"
        },
        "ghcr.io/devcontainers-contrib/features/maven-sdkman:2": {
            "jdkVersion": "17",
            "jdkDistro": "ms"
        },
        // Scala version is dictated by latest Synapse runtime to ensure code compatibility
        // https://learn.microsoft.com/en-us/azure/synapse-analytics/spark/apache-spark-33-runtime
        "ghcr.io/devcontainers-contrib/features/scala-sdkman:2": {
            "version": "2.12.15",
            "jdkVersion": "8",
            "jdkDistro": "ms"
        },
        // Scala version to CLI mapping
        // https://scala-cli.virtuslab.org/docs/reference/scala-versions
        "ghcr.io/devcontainers-contrib/features/scalacli-sdkman:2": {
            "version": "0.1.3",
            "jdkVersion": "8",
            "jdkDistro": "ms"
        },
        "ghcr.io/devcontainers/features/python:1": {
            "version": "os-provided"
        }
    },
    // Various mounting, run, post-create, and user settings
    "containerEnv": {
        "SSH_AUTH_SOCK": "{localEnv:SSH_AUTH_SOCK}",
        // Useful for doing bind mounts for containers launched from inside the devcontainer.
        "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
        "CONTAINER_WORKSPACE_FOLDER": "${containerWorkspaceFolder}"
    },
    "postCreateCommand": "/tmp/overlay/post-create-commands.sh",
    "postAttachCommand": "/tmp/overlay/post-attach-commands.sh",
    // Set *default* container specific settings.json values on container create.
    // See Also: https://containers.dev/supporting
    "customizations": {
        "vscode": {
            "settings": {
                // Editor
                "editor.formatOnType": true,
                "editor.formatOnSave": true,
                // Terminal
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "bash"
                    },
                    "zsh": {
                        "path": "zsh"
                    },
                    "fish": {
                        "path": "fish"
                    },
                    "tmux": {
                        "path": "tmux",
                        "icon": "terminal-tmux"
                    },
                    "pwsh": {
                        "path": "pwsh",
                        "icon": "terminal-powershell"
                    }
                },
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.inheritEnv": true,
                // C#
                "csharp.format.enable": true,
                "omnisharp.path": "latest",
                "omnisharp.organizeImportsOnFormat": true,
                "omnisharp.enableImportCompletion": true,
                "omnisharp.useModernNet": true,
                // Go
                "go.gopath": "/go",
                "go.goroot": "/usr/local/go",
                "go.lintTool": "golint",
                "go.lintOnSave": "package", // default
                "cSpell.userWords": [
                    "arcdata",
                    "otel",
                    "otelcol",
                    "devcontainer",
                    "liveshare"
                ],
                // Python
                "python.languageServer": "Pylance",
                "jupyter.jupyterServerType": "local",
                "python.testing.unittestEnabled": false,
                "python.testing.pytestEnabled": true,
                "python.formatting.provider": "black",
                "python.defaultInterpreterPath": "/bin/python3",
                // VS Code team has a regression that regresses extensions in devcontainer, this is a workaround
                // until they fix this bug: https://github.com/microsoft/vscode/issues/175705#issuecomment-1987083692
                //
                "extensions.verifySignature": false
            },
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "DavidAnson.vscode-markdownlint", // Linter for markdown files
                "donjayamanne.githistory", // Enhanced git history experience
                "eamodio.gitlens", // Enhanced git experience
                "EditorConfig.EditorConfig", // Support for .editorconfig files
                "esbenp.prettier-vscode", // A pretty good formatter for many languages
                "github.copilot", // Copilot integration
                "github.copilot-chat", // Copilot chat integration
                "golang.go", // Go language support
                "Gruntfuggly.todo-tree", // Highlights TODO comments in code
                "huntertran.auto-markdown-toc", // Auto-generated Markdown Table of Contents
                "IBM.output-colorizer", // Colorize your output/test logs
                "marp-team.marp-vscode", // PowerPoints - but with code
                "ms-azure-devops.azure-pipelines", // Azure Pipelines integration
                "ms-azuretools.vscode-docker", // Docker integration
                "MS-CST-E.vscode-devskim", // DevSkim security linter
                "ms-vsliveshare.vsliveshare-pack", // Allows easy code share
                "nrwl.angular-console", // Nx console plugin
                "redhat.vscode-yaml", // Kubernetes manifest syntax highlighting
                "shd101wyy.markdown-preview-enhanced", // Enhanced markdown previewer
                "spikespaz.vscode-smoothtype", // Smooth cursor animation
                "stkb.rewrap", // "Alt + Q" -> rewrap comments after n characters on one line
                "streetsidesoftware.code-spell-checker", // Spell checks your code
                "tyriar.sort-lines", // "Ctrl + Shift + P -> Sort lines" -> sort lines alphabetically
                "waderyan.gitblame", // Enhances git blame experience
                "foxundermoon.shell-format", // Shell script formatter
                "msazurermtools.azurerm-vscode-tools", // ARM template validation
                "ms-dotnettools.csharp", // C# language support
                "csharpier.csharpier-vscode", // C# formatter
                "scalameta.metals", // Scala language server and IDE
                "scala-lang.scala", // Scala language support
                "vscjava.vscode-java-pack", // Java Extension Pack
                "oderwat.indent-rainbow", // Color indented code to make it easier to read
                "ms-azuretools.vscode-bicep", // Bicep language support
                "ms-python.python", // Python language support
                "ms-python.vscode-pylance" // Python language server
            ]
        }
    }
}